log2(0.0334684792)
log(0.0334684792)
log(0.0334684792)
?log
log10(0.0334684792)
logn(0.0334684792)
-1.5 + 3 + (-.5*5)
exp(-1)
log( 0.3678794)
log(1)
1- 0.3678794
0.3678794 / (1+0.3678794)
install.packages("haven")
devtools::install_github("hadley/haven")
install.packages("devtools")
devtools::install_github("hadley/haven")
yourData = read_dta("Downloads/CPR_Final_data_respondents_anonymized.dta")
devtools::install_github("hadley/haven")
install.packages("devtools")
install.packages("devtools")
install.packages("haven")
yourData = read_dta("Downloads/CPR_Final_data_respondents_anonymized.dta")
devtools::install_github("hadley/haven")
install.packages("haven")
devtools::install_github("hadley/haven")
yourData = read_dta("Downloads/CPR_Final_data_respondents_anonymized.dta")
devtools::install_github("hadley/haven")
data(state)
data("mtcars")
library("MASS")
?shuttle
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
?map_data
install.packages( "maps")
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
install.packages("mapproj")
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Assault)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
USAccDeaths
USArrests
USJudgeRatings
USPersonalExpenditure
USAccDeaths
USPersonalExpenditure
USJudgeRatings
USArrests
library(ggplot2)
data(USArrests)
# Transform the USArrests data set to the required format
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
states <- map_data("state")  # map to the states
ggplot(crimes, aes(map_id = state, fill=Rape)) +
geom_map(map = states) +
expand_limits(x = states$long, y = states$lat) +
coord_map("polyconic")
?USArrests
USArrests[,4]
USArrests[,c(1,4)]
USArrests[,c(4)]
USArrests[,4]
USArrests[1,4]
USArrests[,4]
usarrests <- USArrests[,4]
usarrests <- as.data.frame( USArrests[,4] )
usarrests
USArrests[,4 , drop=F]
setwd("Documents/R/TennisData/")
tennisData <- read.csv( "Data/Reformatted.csv")
View(tennisData)
WinLogModelAll <- glm(
formula =  Result ~ . ,
family = "bionmial" ,
data = tennisData )
WinLogModelAll <- glm(
formula =  Result ~ . ,
family = "binomial" ,
data = tennisData )
summary(WinLogModelAll)
predl <- predict( model , type = "response" )
predl <- predict( WinLogModelAll , type = "response" )
tennisData$predl <- predl
View(tennisData)
View(tennisData)
backwards = step(WinLogModelAll)
summary(backwards)
model <- glm( Result ~ firstServePointsWon. + secondServePointsWon. + breakPointsWon. + returnPointsWon. , family = "binomial" ,
data = tennisData )
model <- glm( Result ~ firstServePointsWon. + secondServePointsWon. + returnPointsWon. , family = "binomial" ,
data = tennisData )
model <- glm( Result ~ firstServePointsWon. + secondServePointsWon. + returnPointsWon. , family = "binomial" ,
data = tennisData )
predl <- predict( model , type = "response" )
tennisData$predl <- predl
View(tennisData)
View(tennisData)
summary(tennisData)
model <- glm( Result ~ firstServePointsWon. + secondServePointsWon. + returnPointsWon. , family = "binomial" , data = tennisData )
acesModel <- lm( aces ~ . -predl -result)
acesModel <- lm( aces ~ . -predl -result , data=tennisData)
acesModel <- lm( aces ~ . -predl result , data=tennisData)
acesModel <- lm( aces ~ . -predl - Result  , data=tennisData)
summary( acesModel )
acesModel <- lm( aces ~ . -predl  , data=tennisData)
summary( acesModel )
acesModel <- lm( aces ~ . -predl - Result  , data=tennisData)
acesModel2 <- step(acesModel)
summary(acesModel2)
model(aacesModel2)
summary(aacesModel2)
summary(acesModel2)
acesModel3 <- lm( aces ~ Tournament + Match + firstServeIn. + doubleFaults +
firstServePointsWon. + returnPointsWon., data = tennisData)acesModel3 <- lm( aces ~ Tournament + Match + firstServeIn. + doubleFaults +
firstServePointsWon. + returnPointsWon., data = tennisData)
acesModel3 <- lm( aces ~ Tournament + Match + firstServeIn. + doubleFaults +
firstServePointsWon. + returnPointsWon., data = tennisData)
